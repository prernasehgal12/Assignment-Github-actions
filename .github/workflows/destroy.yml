name: Terraform Destroy
# on:
#  workflow_dispatch:
# on:
  # workflow_run:
  #   workflows: ["Terraform Apply"]
  #   types:
  #     - completed  
on:
  workflow_dispatch:
    inputs:
      instance_id:
        description: 'EC2 Instance ID'
        required: true
  push:
    branches:
      - main # Adjust this to the branch where your code resides

jobs:
 terraform-destroy:
   name: "Terraform Destroy"
   runs-on: ubuntu-latest 
   env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'ap-south-1'
   # permissions:
   #    id-token: write
   #    contents: read
   steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0 # Replace with your desired Terraform version

      - name: Initialize Terraform
        run: terraform init

        
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #      aws-region: us-east-2
      #      role-to-assume: arn:aws:iam::xxxxxx:role/xxxxxxxxxxxx
      # - run: aws sts get-caller-identity   

      # - name: Terraform Init
      #   run: terraform init 
        
      # - name: Show Destroy plan
      #   if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
      #   run: terraform plan -destroy
    
      - name: Terraform destroy
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        run: terraform destroy -auto-approve
        
